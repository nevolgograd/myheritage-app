.formHeader {
    width: 100%;
    height: 90px;

    position: fixed;
    top: 0;
    left: 0;
    z-index: 1;

    display: grid;
    grid-auto-flow: column;
    place-content: stretch space-between;

    margin-left: auto;
    margin-right: auto;
    padding-left: 40px;
    padding-right: 40px;

    background-color: #fff;
    border-bottom: 1px solid #e9e9e9;

    & :global(div.filters-result-block) {
        padding-left: 1.5rem;

        display: grid;
        place-content: center;

        & p {
            margin: 0;

            &:first-child {
                font-size: 1rem;
                font-weight: 600;
            }

            &:second-child {
                padding-top: 0.5rem;
            }
        }
    }

    & :global(div.buttons-block) {
        display: grid;
        grid-auto-flow: column;
        place-items: center;

        & > button {
            width: max-content;
            height: 56px;

            padding: 0.5em 1.5em;

            font-size: 16px;
            font-weight: 600;

            cursor: pointer;

            &[type="submit"] {
                color: #222222;
                border: 2px solid #222222;
                border-radius: 8px;
                background-color: #fff;
            }
        }

        & :global(button.cancel-btn) {
            color: #3e8dd8;
            background-color: #fff;
            border: none;
        }
    }
}

.form {
    display: grid;
    grid-gap: 1rem;
    height: 100%;
    width: 100%;
    max-width: 1580px;
    padding-left: 0;
    padding-right: 40px;
    margin-top: 90px;
    padding-top: 1.5rem;

    & fieldset {
        border: none;
        display: grid;
        padding: 0;
        margin: 0;
    }
}

.rangeSelect {
    display: grid;
    grid-gap: 20px;
    grid-auto-flow: column;
    grid-auto-columns: max-content;
    place-items: end stretch;
}

.closeBtn {
    filter: grayscale();
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 1.25rem;
}

/* Animating */
#modalDialog {
    display: grid;
    place-content: start center;
    background: white;
    width: 100%;
    height: 100%;

    &:popover-open {
        /*   0. BEFORE-OPEN STATE   */
        /*  initial state for what we're animating *in* from,
        in this case: goes from lower (y + 20px) to center  */
        @starting-style {
            transform: translateY(20px);
            opacity: 0;
        }

        /*   1. OPEN STATE   */
        /*  state when popover is open, BOTH:
        what we're transitioning *in* to
        and transitioning *out* from */
        transform: translateY(0);
        opacity: 1;
        visibility: visible;
    }

    /*   2. AFTER-OPEN-IS-CLOSED STATE   */
    /*  initial state for what we're animating *out* to ,
      in this case: goes from center to (y - 50px) higher */
    transform: translateY(-50px);
    visibility: hidden;
    opacity: 0;

    /*  enumarate transitioning properties, including display */
    transition:
        transform 0.5s,
        opacity 0.5s,
        display 0.5s;
    transition-behavior: allow-discrete;
}
